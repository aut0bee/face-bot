{"ast":null,"code":"var _jsxFileName = \"/Users/Autobee/face-bot/src/App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Profile from './components/Profile/Profile';\nimport Modal from './components/Modal/Modal';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 40,\n      density: {\n        enable: true,\n        value_area: 200\n      }\n    }\n  }\n};\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  boxes: [],\n  route: 'Register',\n  isProfileOpen: false,\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: '',\n    age: 0,\n    pet: ''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined,\n          age: data.age,\n          pet: data.pet\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return data.outputs[0].data.regions.map(face => {\n        const clarifaiFace = face.region_info.bounding_box;\n        return {\n          leftCol: clarifaiFace.left_col * width,\n          topRow: clarifaiFace.top_row * height,\n          rightCol: width - clarifaiFace.right_col * width,\n          bottomRow: height - clarifaiFace.bottom_row * height\n        };\n      });\n    };\n\n    this.displayFaceBox = boxes => {\n      this.setState({\n        boxes: boxes\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      fetch('https://fast-reef-61278.herokuapp.com/imageurl', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': window.sessionStorage.getItem('token')\n        },\n        body: JSON.stringify({\n          input: this.state.input\n        })\n      }).then(response => response.json()).then(response => {\n        if (response) {\n          fetch('https://fast-reef-61278.herokuapp.com/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': window.sessionStorage.getItem('token')\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          }).catch(console.log);\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        return this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.toggleModal = () => {\n      this.setState(state => ({ ...state,\n        isProfileOpen: !state.isProfileOpen\n      }));\n    };\n\n    this.state = initialState;\n  }\n\n  componentDidMount() {\n    const token = window.sessionStorage.getItem('token');\n\n    if (token) {\n      fetch('https://fast-reef-61278.herokuapp.com/signin', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': token\n        }\n      }).then(response => response.json()).then(data => {\n        if (data && data.id) {\n          fetch(`https://fast-reef-61278.herokuapp.com/profile/${data.id}`, {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': token\n            }\n          }).then(response => response.json()).then(user => {\n            if (user && user.email) {\n              this.loadUser(user);\n              this.onRouteChange('home');\n            }\n          });\n        }\n      }).catch(console.log);\n    }\n  }\n\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      route,\n      boxes,\n      isProfileOpen,\n      user\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        params: particlesOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        isSignedIn: isSignedIn,\n        onRouteChange: this.onRouteChange,\n        toggleModal: this.toggleModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), isProfileOpen && /*#__PURE__*/_jsxDEV(Modal, {\n        children: /*#__PURE__*/_jsxDEV(Profile, {\n          isProfileOpen: isProfileOpen,\n          toggleModal: this.toggleModal,\n          user: user,\n          loadUser: this.loadUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this), route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {\n          name: this.state.user.name,\n          entries: this.state.user.entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          boxes: boxes,\n          imageUrl: imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 13\n      }, this) : route === 'signin' ? /*#__PURE__*/_jsxDEV(Signin, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 16\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Autobee/face-bot/src/App.js"],"names":["React","Component","Particles","FaceRecognition","Navigation","Signin","Register","Logo","ImageLinkForm","Rank","Profile","Modal","particlesOptions","particles","number","value","density","enable","value_area","initialState","input","imageUrl","boxes","route","isProfileOpen","isSignedIn","user","id","name","email","entries","joined","age","pet","App","constructor","loadUser","data","setState","calculateFaceLocation","image","document","getElementById","width","Number","height","outputs","regions","map","face","clarifaiFace","region_info","bounding_box","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","event","target","onButtonSubmit","state","fetch","method","headers","window","sessionStorage","getItem","body","JSON","stringify","then","response","json","count","Object","assign","catch","console","log","err","onRouteChange","toggleModal","componentDidMount","token","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Profile from './components/Profile/Profile';\nimport Modal from './components/Modal/Modal';\nimport './App.css';\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 40,\n      density: {\n        enable: true,\n        value_area: 200\n      }\n    }\n  }\n}\n\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  boxes: [],\n  route: 'Register',\n  isProfileOpen: false,\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: '',\n    age: 0,\n    pet: ''\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n  componentDidMount() {\n    const token = window.sessionStorage.getItem('token');\n    if (token) {\n      fetch('https://fast-reef-61278.herokuapp.com/signin', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': token\n        }\n      })\n        .then(response => response.json())\n        .then(data => {\n          if (data && data.id) {\n            fetch(`https://fast-reef-61278.herokuapp.com/profile/${data.id}`, {\n              method: 'GET',\n              headers: {\n                'Content-Type': 'application/json',\n                'Authorization': token\n              }\n            })\n            .then(response => response.json())\n            .then(user => {\n              if (user && user.email) {\n                this.loadUser(user)\n                this.onRouteChange('home');\n              }\n            })\n          }\n        })\n        .catch(console.log)\n    }\n  }\n\n  loadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined,\n      age: data.age,\n      pet: data.pet\n    }})\n  }\n\n  calculateFaceLocation = (data) => {\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return data.outputs[0].data.regions.map(face => {\n      const clarifaiFace = face.region_info.bounding_box;\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - (clarifaiFace.right_col * width),\n        bottomRow: height - (clarifaiFace.bottom_row * height)\n      }\n    });\n  }\n\n  displayFaceBox = (boxes) => {\n    this.setState({boxes: boxes});\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n      fetch('https://fast-reef-61278.herokuapp.com/imageurl', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': window.sessionStorage.getItem('token')\n        },\n        body: JSON.stringify({\n          input: this.state.input\n        })\n      })\n      .then(response => response.json())\n      .then(response => {\n        if (response) {\n          fetch('https://fast-reef-61278.herokuapp.com/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': window.sessionStorage.getItem('token')\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n            .then(response => response.json())\n            .then(count => {\n              this.setState(Object.assign(this.state.user, { entries: count}))\n            })\n            .catch(console.log)\n\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n      .catch(err => console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      return this.setState(initialState)\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }\n\n  toggleModal = () => {\n    this.setState(state => ({\n      ...state,\n      isProfileOpen: !state.isProfileOpen,\n    }));\n  }\n\n  render() {\n    const { isSignedIn, imageUrl, route, boxes, isProfileOpen, user } = this.state;\n    return (\n      <div className=\"App\">\n        <Particles className='particles'\n          params={particlesOptions}\n        />\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} toggleModal={this.toggleModal}/>\n        {\n          isProfileOpen &&\n          <Modal>\n            <Profile isProfileOpen={isProfileOpen} toggleModal={this.toggleModal} user={user} loadUser={this.loadUser} />\n          </Modal>\n        }\n        { route === 'home'\n          ? <div>\n              <Logo />\n              <Rank\n                name={this.state.user.name}\n                entries={this.state.user.entries}\n              />\n              <ImageLinkForm\n                onInputChange={this.onInputChange}\n                onButtonSubmit={this.onButtonSubmit}\n              />\n              <FaceRecognition boxes={boxes} imageUrl={imageUrl} />\n            </div>\n          : (\n             route === 'signin'\n             ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n             : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}
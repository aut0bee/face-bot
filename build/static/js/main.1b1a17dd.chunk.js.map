{"version":3,"sources":["components/FaceRecognition/FaceRecognition.js","components/Profile/ProfileIcon.js","components/Navigation/Navigation.js","components/Signin/Signin.js","components/Register/Register.js","components/Logo/brain2.png","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","components/Profile/Profile.js","components/Modal/Modal.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["FaceRecognition","imageUrl","boxes","className","id","alt","src","width","heigh","map","box","style","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","ProfileIcon","props","toggle","setState","dropdownOpen","state","Dropdown","isOpen","this","DropdownToggle","tag","onClick","data-toggle","aria-expanded","DropdownMenu","marginLeft","backgroundColor","DropdownItem","toggleModal","onRouteChange","React","Component","Navigation","isSignedIn","display","justifyContent","Signin","onEmailChange","event","signInEmail","target","value","onPasswordChange","signInPassword","saveAuthTokenInSessions","token","window","sessionStorage","setItem","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","password","then","response","json","data","success","loadUser","user","catch","console","log","htmlFor","type","name","onChange","Register","onNameChange","Logo","options","max","height","paddingTop","brain","ImageLinkForm","onInputChange","onButtonSubmit","Rank","generateEmoji","count","emoji","input","entries","prevProps","prevState","Profile","onProfileUpdate","formInput","resp","onFormChange","age","pet","Date","joined","toLocaleDateString","placeholder","modalRoot","document","getElementById","Modal","el","createElement","appendChild","removeChild","ReactDOM","createPortal","children","particlesOptions","particles","number","density","enable","value_area","initialState","route","isProfileOpen","App","calculateFaceLocation","image","Number","outputs","regions","face","clarifaiFace","region_info","bounding_box","left_col","top_row","right_col","bottom_row","displayFaceBox","getItem","Object","assign","err","params","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","render","URL","process","href","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.1b1a17dd.chunk.js","sourcesContent":["import React from 'react';\nimport './FaceRecognition.css';\n\nconst FaceRecognition = ({ imageUrl, boxes }) => {\n  return (\n    <div className='center ma'>\n      <div className='absolute mt2'>\n        <img id='inputimage' alt='' src={imageUrl} width='500px' heigh='auto'/>\n        {boxes.map(box =>\n          <div key={`box${box.topRow}${box.rightCol}`}\n              className='bounding-box'\n              style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default FaceRecognition;","import React from 'react';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\nclass ProfileIcon extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dropdownOpen: false\n    };\n  }\n\n  toggle = () => {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"pa4 tc\">\n            <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n              <DropdownToggle\n                tag=\"span\"\n                onClick={this.toggle}\n                data-toggle=\"dropdown\"\n                aria-expanded={this.state.dropdownOpen}\n              >\n                <img\n                  src=\"https://pbs.twimg.com/profile_images/707386802215247872/bO-U0PTv.jpg\"\n                  className=\"br-100 h3 w3 dib\" alt=\"avatar\" />\n              </DropdownToggle>\n              {/* Old <DropdownMenu className='b--transparent shadow-5' style={{marginTop: '20px', backgroundColor: 'rgba(255, 255, 255, 0.5)'}} right> */}\n              <DropdownMenu className='b--transparent shadow-5' style={{marginLeft: '-6rem', backgroundColor: 'rgba(255, 255, 255, 0.5)'}} >\n                <DropdownItem onClick={() => this.props.toggleModal()}>View Profile</DropdownItem>\n                <DropdownItem onClick={() => this.props.onRouteChange('signout')}>Sign Out</DropdownItem>\n              </DropdownMenu>\n            </Dropdown>\n      </div>\n    );\n  }\n}\n\nexport default ProfileIcon;","import React from 'react';\nimport ProfileIcon from '../Profile/ProfileIcon';\n\nconst Navigation = ({ onRouteChange, isSignedIn, toggleModal }) => {\n    if (isSignedIn) {\n      return (\n        <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\n          <ProfileIcon onRouteChange={onRouteChange} toggleModal={toggleModal} />\n        </nav>\n      );\n    } else {\n      return (\n        <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\n          <p onClick={() => onRouteChange('signin')} className='f3 link dim black underline pa3 pointer'>Sign In</p>\n          <p onClick={() => onRouteChange('register')} className='f3 link dim black underline pa3 pointer'>Register</p>\n        </nav>\n      );\n    }\n}\n\nexport default Navigation;","import React from 'react';\nimport './Signin.css';\n\nclass Signin extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      signInEmail: '',\n      signInPassword: ''\n    }\n  }\n\n  onEmailChange = (event) => {\n    this.setState({signInEmail: event.target.value})\n  }\n\n  onPasswordChange = (event) => {\n    this.setState({signInPassword: event.target.value})\n  }\n\n  saveAuthTokenInSessions = (token) => {\n    window.sessionStorage.setItem('token', token);\n  }\n\n  onSubmitSignIn = () => {\n    fetch('https://fast-reef-61278.herokuapp.com/signin', {\n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        email: this.state.signInEmail,\n        password: this.state.signInPassword\n      })\n    })\n      .then(response => response.json())\n      .then(data => {\n        if (data && data.success === \"true\") {\n          this.saveAuthTokenInSessions(data.token)\n          this.props.loadUser(data.user)\n          this.props.onRouteChange('home');\n        }\n      })\n      .catch(console.log)\n  }\n\n  render() {\n    const { onRouteChange } = this.props;\n    return (\n      <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n        <main className=\"pa4 black-80\">\n          <div className=\"measure\">\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n              <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n                <input\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100 hover-black\"\n                  type=\"email\"\n                  name=\"email-address\"\n                  id=\"email-address\"\n                  onChange={this.onEmailChange}\n                />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                <input\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100 hover-black\"\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  onChange={this.onPasswordChange}\n                />\n              </div>\n            </fieldset>\n            <div className=\"\">\n              <input\n                onClick={this.onSubmitSignIn}\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                type=\"submit\"\n                value=\"Sign in\"\n              />\n            </div>\n            <div className=\"lh-copy mt3\">\n              <p  onClick={() => onRouteChange('register')} className=\"f6 link dim black db pointer\">Register</p>\n            </div>\n          </div>\n        </main>\n      </article>\n    );\n  }\n}\n\nexport default Signin;","import React from 'react';\nimport './Register.css';\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      name: ''\n    }\n  }\n\n  onNameChange = (event) => {\n    this.setState({name: event.target.value})\n  }\n\n  onEmailChange = (event) => {\n    this.setState({email: event.target.value})\n  }\n\n  onPasswordChange = (event) => {\n    this.setState({password: event.target.value})\n  }\n\n  onSubmitSignIn = () => {\n    fetch('https://fast-reef-61278.herokuapp.com/register', {\n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        email: this.state.email,\n        password: this.state.password,\n        name: this.state.name\n      })\n    })\n      .then(response => response.json())\n      .then(user => {\n        if (user.id) {\n          this.props.loadUser(user)\n          this.props.onRouteChange('home');\n        }\n      })\n  }\n\n  render() {\n    return (\n      <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n        <main className=\"pa4 black-80\">\n          <div className=\"measure\">\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n              <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\n                <input\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100 hover-black\"\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                  onChange={this.onNameChange}\n                />\n              </div>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n                <input\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100 hover-black\"\n                  type=\"email\"\n                  name=\"email-address\"\n                  id=\"email-address\"\n                  onChange={this.onEmailChange}\n                />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                <input\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100 hover-black\"\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  onChange={this.onPasswordChange}\n                />\n              </div>\n            </fieldset>\n            <div className=\"\">\n              <input\n                onClick={this.onSubmitSignIn}\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                type=\"submit\"\n                value=\"Register\"\n              />\n            </div>\n          </div>\n        </main>\n      </article>\n    );\n  }\n}\n\nexport default Register;","export default __webpack_public_path__ + \"static/media/brain2.27cfc85f.png\";","import React from 'react';\nimport Tilt from 'react-tilt';\nimport brain from './brain2.png';\nimport './Logo.css';\n\nconst Logo = () => {\n  return (\n    <div className='center pa4'>\n          <Tilt className=\"Tilt br2 shadow-4\" options={{ max : 55 }} style={{ height: 150, width: 150 }} >\n        <div className=\"Tilt-inner pa3\">\n          <img style={{paddingTop: '5px'}} alt='logo' src={brain}/>\n        </div>\n      </Tilt>\n    </div>\n  );\n}\n\nexport default Logo;","import React from 'react';\nimport './ImageLinkForm.css';\n\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\n  return (\n    <div>\n      <p className='f3'>\n        {'Are you a non human? Submit a photo link to the robot brain to learn what a human face looks like!'}\n      </p>\n      <div className='center'>\n        <div className='form center pa4 br3 shadow-5'>\n          <input className='f4 pa2 w-70 center' type='text' onChange={onInputChange}/>\n          <button\n            className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple'\n            onClick={onButtonSubmit}\n          >Detect</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ImageLinkForm;\n","import React, { Component } from 'react';\n\nclass Rank extends Component {\n  constructor() {\n    super()\n    this.state = {\n      emoji: ''\n    }\n  }\n\n  componentDidMount() {\n    this.generateEmoji(this.props.entries);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.entries === this.props.entries) {\n      return null\n    }\n    this.generateEmoji(this.props.entries)\n  }\n\n  generateEmoji = (count) => {\n    fetch(`https://6qs6hx9366.execute-api.us-east-1.amazonaws.com/dev/rank?rank=${count}`)\n      .then(response => response.json())\n      .then(data => this.setState({emoji: data.input}))\n      .catch(console.log)\n  }\n\n  render() {\n    const { name, entries } = this.props;\n    return (\n      <div>\n        <div className='white f3'>\n          {`${name}, your current entry count is...`}\n        </div>\n        <div className='white f1'>\n          {entries}\n        </div>\n        <div className= 'white f1'>\n          {`${this.state.emoji}`}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Rank;","import React, { Component } from 'react';\nimport './Profile.css';\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      name: this.props.user.name,\n      age: this.props.user.age,\n      pet: this.props.user.pet\n    }\n  }\n\n  onProfileUpdate = (data) => {\n    fetch(`https://fast-reef-61278.herokuapp.com/profile/${this.props.user.id}`, {\n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n         body: JSON.stringify({formInput: data}) \n    }).then(resp => {\n        this.props.toggleModal();\n        this.props.loadUser({ ...this.props.user, ...data });\n    }).catch(console.log)\n  }\n\n  onFormChange = (event) => {\n    switch(event.target.name) {\n      case 'user-name':\n        this.setState({name: event.target.value})\n        break;\n      case 'user-age':\n        this.setState({age: event.target.value})\n        break;\n      case 'user-pet':\n        this.setState({pet: event.target.value})\n        break;\n      default:\n        return;\n    }\n  }\n\n  render() {\n    const { toggleModal, user } = this.props\n    const { name, age, pet } = this.state;\n    return (\n      <div className='profile-modal'>\n        <article className='br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center bg-white'>\n          <main className='pa4 black-80 w-80'>\n            <img\n              src='https://pbs.twimg.com/profile_images/707386802215247872/bO-U0PTv.jpg'\n              className='h3 w3 dib' alt='avatar'\n            />\n            <h1>{name}</h1>\n            <h2>{age}</h2>\n            <h3>{pet}</h3>\n            <h4>{`Images submitted: ${user.entries}`}</h4>\n            <p>{`Member since: ${new Date(user.joined).toLocaleDateString()}`}</p>\n            <hr />\n            <label className='mt2 fw6' htmlFor='user-name'>Name:</label>\n            <input onChange={this.onFormChange} type='text' name='user-name' className='pa2 ba w-100' placeholder={name}></input>\n            {/*<label className='mt2 fw6' htmlFor='user-age'>Age:</label>\n            <input onChange={this.onFormChange} type='text' name='user-age' className='pa2 ba w-100' placeholder={age}></input>\n            <label className='mt2 fw6' htmlFor='user-pet'>Pet:</label>\n            <input onChange={this.onFormChange} type='text' name='user-pet' className='pa2 ba w-100' placeholder={pet}></input>*/}\n            <div className='mt4' style={{ display: 'flex', justifyContent: 'space-evenly'}}>\n              <button className='b pa2 grow pointer hover-white w-40 bg-light-blue b--black-20'\n                onClick={() => this.onProfileUpdate({ name, age, pet })}>\n                Save\n              </button>\n              <button className='b pa2 grow pointer hover-white w-40 bg-light-red b--black-20'\n                onClick={toggleModal}>\n                Cancel\n              </button>\n            </div>\n\n          </main>\n          <div className='modal-close' onClick={toggleModal}>\n            &times;\n          </div>\n        </article>\n      </div>\n    );\n  }\n}\n\nexport default Profile;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Modal.css';\n\nconst modalRoot = document.getElementById('modal-root');\n\nclass Modal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.el = document.createElement('div');\n  }\n\n  componentDidMount() {\n    modalRoot.appendChild(this.el);\n  }\n\n  componentWillUnmount() {\n    modalRoot.removeChild(this.el);\n  }\n\n  render() {\n    return ReactDOM.createPortal(\n      this.props.children,\n      this.el,\n    );\n  }\n}\n\nexport default Modal;","import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Profile from './components/Profile/Profile';\nimport Modal from './components/Modal/Modal';\nimport './App.css';\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 40,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}\n\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  boxes: [],\n  route: 'Register',\n  isProfileOpen: false,\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: '',\n    age: 0,\n    pet: ''\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n  componentDidMount() {\n    const token = window.sessionStorage.getItem('token');\n    if (token) {\n      fetch('https://fast-reef-61278.herokuapp.com/signin', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': token\n        }\n      })\n        .then(response => response.json())\n        .then(data => {\n          if (data && data.id) {\n            fetch(`https://fast-reef-61278.herokuapp.com/profile/${data.id}`, {\n              method: 'GET',\n              headers: {\n                'Content-Type': 'application/json',\n                'Authorization': token\n              }\n            })\n            .then(response => response.json())\n            .then(user => {\n              if (user && user.email) {\n                this.loadUser(user)\n                this.onRouteChange('home');\n              }\n            })\n          }\n        })\n        .catch(console.log)\n    }\n  }\n\n  loadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined,\n      age: data.age,\n      pet: data.pet\n    }})\n  }\n\n  calculateFaceLocation = (data) => {\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return data.outputs[0].data.regions.map(face => {\n      const clarifaiFace = face.region_info.bounding_box;\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - (clarifaiFace.right_col * width),\n        bottomRow: height - (clarifaiFace.bottom_row * height)\n      }\n    });\n  }\n\n  displayFaceBox = (boxes) => {\n    this.setState({boxes: boxes});\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n      fetch('https://fast-reef-61278.herokuapp.com/imageurl', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': window.sessionStorage.getItem('token')\n        },\n        body: JSON.stringify({\n          input: this.state.input\n        })\n      })\n      .then(response => response.json())\n      .then(response => {\n        if (response) {\n          fetch('https://fast-reef-61278.herokuapp.com/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': window.sessionStorage.getItem('token')\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n            .then(response => response.json())\n            .then(count => {\n              this.setState(Object.assign(this.state.user, { entries: count}))\n            })\n            .catch(console.log)\n\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n      .catch(err => console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      return this.setState(initialState)\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }\n\n  toggleModal = () => {\n    this.setState(state => ({\n      ...state,\n      isProfileOpen: !state.isProfileOpen,\n    }));\n  }\n\n  render() {\n    const { isSignedIn, imageUrl, route, boxes, isProfileOpen, user } = this.state;\n    return (\n      <div className=\"App\">\n        <Particles className='particles'\n          params={particlesOptions}\n        />\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} toggleModal={this.toggleModal}/>\n        {\n          isProfileOpen &&\n          <Modal>\n            <Profile isProfileOpen={isProfileOpen} toggleModal={this.toggleModal} user={user} loadUser={this.loadUser} />\n          </Modal>\n        }\n        { route === 'home'\n          ? <div>\n              <Logo />\n              <Rank\n                name={this.state.user.name}\n                entries={this.state.user.entries}\n              />\n              <ImageLinkForm\n                onInputChange={this.onInputChange}\n                onButtonSubmit={this.onButtonSubmit}\n              />\n              <FaceRecognition boxes={boxes} imageUrl={imageUrl} />\n            </div>\n          : (\n             route === 'signin'\n             ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n             : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'tachyons';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}